# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and test Python

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      # - name: Lint with flake8
      #  run: |
      # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest

  build:
    needs: ["test"]
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller

      - name: Run build
        run: ./run.sh build
        shell: bash

      # - name: Archive release build
      #   uses: thedoctor0/zip-release@main
      #   with:
      #     type: "zip"
      #     filename: "fundbook_release.zip"
      #     path: release/fundbook_release

      - uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: release/fundbook_release

  postbuild-test:
    needs: ["build"]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: pip install -r requirements.txt pyinstaller

      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: release-artifact

      - name: Run tests
        run: echo "This will run more tests"

  release-if-tagged:
    needs: ["postbuild-test"]
    runs-on: ubuntu-latest
    # Only run this job on the release branch
    # if: github.ref == 'refs/heads/release'
    # steps to download the artifact and upload it to the release
    steps:
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: release-artifact

      - uses: actions/checkout@v3
      
      - name: Display structure of downloaded files
        run: ls -R

      - name: Archive release
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "fundbook_release.zip"
          path: fundbook_release

      - name: Display files again
        run: ls -l

      # - name: Release to Github
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: release/fundbook_release
      #     tag_name: ${{ github.ref }}
      #     name: ${{ github.ref }}
      #     body: ${{ github.ref }}
      #     draft: false
      #     prerelease: false
      #     token: ${{ secrets.GITHUB_TOKEN }}
